


ARM Macro Assembler    Page 1 


    1 00000000         ;-------------------------------------------------------
                       --------------------
    2 00000000         ;
    3 00000000         ;   Programmer     : Nathan Isaac
    4 00000000         ;
    5 00000000         ;   Class          : CPTR-215
    6 00000000         ;   Language       : ARM assembly
    7 00000000         ;   Assembler      : Keil
    8 00000000         ;   Target MCU    : NXP LPC-2148
    9 00000000         ;    
   10 00000000         ;   Description    : Output a null terminated character 
                       string subroutine
   11 00000000         ;
   12 00000000         ;   Inputs         : none
   13 00000000         ;   
   14 00000000         ;   Outputs        : none
   15 00000000         ;
   16 00000000         ;   Special requirements  : Set up for execution with a 
                       Keil ARM simulator
   17 00000000         ;   
   18 00000000         ;
   19 00000000         ;  NOTES     : 
   20 00000000         ;
   21 00000000         ;-------------------------------------------------------
                       --------------------
   22 00000000         
   23 00000000         
   24 00000000         ;-------------------------------------------------------
                       --------------------
   25 00000000         ; EQUATES
   26 00000000         ;-------------------------------------------------------
                       --------------------     
   27 00000000         
   28 00000000 E002C000 
                       PINSEL0 EQU              0xE002C000
   29 00000000 E0028000 
                       IOPIN   EQU              0xE0028000
   30 00000000 00000008 
                       off_DIR EQU              0x8
   31 00000000 00000005 
                       En_RxTx0
                               EQU              0x5
   32 00000000 00050000 
                       En_RxTx1
                               EQU              0x50000
   33 00000000 E000C000 
                       U0_bas  EQU              0xE000C000
   34 00000000 E0010000 
                       U1_bas  EQU              0xE0010000
   35 00000000 0000000C 
                       Off_LCR EQU              0x0C
   36 00000000 00000014 
                       Off_LSR EQU              0x14
   37 00000000 00000083 
                       S_fmt   EQU              0x83
   38 00000000 00000003 
                       S_fmt2  EQU              0x3
   39 00000000 00000061 
                       Speed   EQU              97



ARM Macro Assembler    Page 2 


   40 00000000         
   41 00000000         ;-------------------------------------------------------
                       --------------------
   42 00000000         ; CODE 
   43 00000000         ;-------------------------------------------------------
                       --------------------
   44 00000000         
   45 00000000         ;stack_start EQU 0x40001000
   46 00000000                 AREA             RESET, CODE, READONLY
   47 00000000         
   48 00000000                 ENTRY
   49 00000000                 EXPORT           __main
   50 00000000         
   51 00000000         __main
   52 00000000         
   53 00000000 EB000000        BL               output_string
   54 00000004         
   55 00000004         stop
   56 00000004 EAFFFFFE        B                stop
   57 00000008         
   58 00000008         
   59 00000008         output_string
   60 00000008 E92D400C        stmfd            sp!, {r3, r2, lr}
   61 0000000C         
   62 0000000C EB000006        BL               set_U0
   63 00000010         
   64 00000010 E59F3094        LDR              r3,=begin   ; load the end addr
                                                            ess of the code & i
                                                            nitialize it as the
                                                             pointer.
   65 00000014 E59F2094        LDR              r2,=end_string ; load the begin
                                                            ning address of the
                                                             code. 
   66 00000018         
   67 00000018         loop
   68 00000018 E5930004        LDR              r0, [r3, #4]
   69 0000001C EB000010        BL               Char_Out0
   70 00000020 E1530002        cmp              r3, r2      ;  are we at the en
                                                            d yet
   71 00000024 1AFFFFFB        bne              loop        ; if r7 != 0 then k
                                                            eep looping
   72 00000028         
   73 00000028 E8BD800C        ldmfd            sp!, {r3, r2, pc} ; pop the sta
                                                            ck and return
   74 0000002C         
   75 0000002C         
   76 0000002C         
   77 0000002C         set_U0
   78 0000002C E92D4000        stmfd            sp!, {lr}
   79 00000030         
   80 00000030 E3A02005        LDR              r2, =En_RxTx0
   81 00000034 E59F1078        LDR              r1, =PINSEL0
   82 00000038 E5910000        LDR              r0, [r1]
   83 0000003C E1800002        ORR              r0, r0, r2
   84 00000040 E5810000        STR              r0, [r1]
   85 00000044 E59F106C        LDR              r1, =U0_bas
   86 00000048 E3A00083        MOV              r0, #S_fmt
   87 0000004C E5C1000C        STRB             r0, [r1, #Off_LCR]
   88 00000050 E3A00061        MOV              r0, #97



ARM Macro Assembler    Page 3 


   89 00000054 E5C10000        STRB             r0, [r1]
   90 00000058 E3A00003        MOV              r0, #S_fmt2
   91 0000005C E5C1000C        STRB             r0, [r1, #Off_LCR]
   92 00000060         
   93 00000060 E8BD8000        ldmfd            sp!, {pc}
   94 00000064         
   95 00000064         
   96 00000064         Char_Out0
   97 00000064 E92D4000        stmfd            sp!, {lr}
   98 00000068         
   99 00000068 E59F1048        LDR              r1, =U0_bas
  100 0000006C         wt_rdy0
  101 0000006C E5D12014        LDRB             r2, [r1, #Off_LSR]
  102 00000070 E3120020        TST              r2, #0x20
  103 00000074 0AFFFFFC        BEQ              wt_rdy0
  104 00000078 E20000FF        AND              r0, r0, #0xFF
  105 0000007C E5C10000        STRB             r0, [r1]
  106 00000080         
  107 00000080 E8BD8000        ldmfd            sp!, {pc}
  108 00000084         
  109 00000084         
  110 00000084         
  111 00000084         Char_In0
  112 00000084 E92D4000        stmfd            sp!, {lr}
  113 00000088         
  114 00000088 E59F1028        LDR              r1, =U0_bas
  115 0000008C         wt_rcd0
  116 0000008C E5D12014        LDRB             r2, [r1, #Off_LSR]
  117 00000090 E3120001        TST              r2, #0x1
  118 00000094 0AFFFFFC        BEQ              wt_rcd0
  119 00000098 E5D10000        LDRB             r0, [r1]
  120 0000009C         
  121 0000009C E8BD8000        ldmfd            sp!, {pc}
  122 000000A0         
  123 000000A0         ;-------------------------------------------------------
                       --------------------
  124 000000A0         ; DATA
  125 000000A0         ;-------------------------------------------------------
                       --------------------
  126 000000A0         
  127 000000A0         ALIGN
  128 000000A0         begin
  129 000000A0 48 65 6C 
              6C 6F 20 
              57 6F 72 
              6C 64 00         DCB              "Hello World",0
  130 000000AC         end_string
  131 000000AC                 END
              00000000 
              00000000 
              E002C000 
              E000C000 
Command Line: --debug --xref --device=DARMP --apcs=interwork -oIsaac_p5.o -IC:\
Keil\ARM\INC\Philips --predefine="__EVAL SETA 1" --list=Isaac_p5.lst Isaac_p5.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ALIGN 000000A0

Symbol: ALIGN
   Definitions
      At line 127 in file Isaac_p5.s
   Uses
      None
Comment: ALIGN unused
Char_In0 00000084

Symbol: Char_In0
   Definitions
      At line 111 in file Isaac_p5.s
   Uses
      None
Comment: Char_In0 unused
Char_Out0 00000064

Symbol: Char_Out0
   Definitions
      At line 96 in file Isaac_p5.s
   Uses
      At line 69 in file Isaac_p5.s
Comment: Char_Out0 used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 46 in file Isaac_p5.s
   Uses
      None
Comment: RESET unused
__main 00000000

Symbol: __main
   Definitions
      At line 51 in file Isaac_p5.s
   Uses
      At line 49 in file Isaac_p5.s
Comment: __main used once
begin 000000A0

Symbol: begin
   Definitions
      At line 128 in file Isaac_p5.s
   Uses
      At line 64 in file Isaac_p5.s
Comment: begin used once
end_string 000000AC

Symbol: end_string
   Definitions
      At line 130 in file Isaac_p5.s
   Uses
      At line 65 in file Isaac_p5.s
Comment: end_string used once
loop 00000018

Symbol: loop



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 67 in file Isaac_p5.s
   Uses
      At line 71 in file Isaac_p5.s
Comment: loop used once
output_string 00000008

Symbol: output_string
   Definitions
      At line 59 in file Isaac_p5.s
   Uses
      At line 53 in file Isaac_p5.s
Comment: output_string used once
set_U0 0000002C

Symbol: set_U0
   Definitions
      At line 77 in file Isaac_p5.s
   Uses
      At line 62 in file Isaac_p5.s
Comment: set_U0 used once
stop 00000004

Symbol: stop
   Definitions
      At line 55 in file Isaac_p5.s
   Uses
      At line 56 in file Isaac_p5.s
Comment: stop used once
wt_rcd0 0000008C

Symbol: wt_rcd0
   Definitions
      At line 115 in file Isaac_p5.s
   Uses
      At line 118 in file Isaac_p5.s
Comment: wt_rcd0 used once
wt_rdy0 0000006C

Symbol: wt_rdy0
   Definitions
      At line 100 in file Isaac_p5.s
   Uses
      At line 103 in file Isaac_p5.s
Comment: wt_rdy0 used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

En_RxTx0 00000005

Symbol: En_RxTx0
   Definitions
      At line 31 in file Isaac_p5.s
   Uses
      At line 80 in file Isaac_p5.s
Comment: En_RxTx0 used once
En_RxTx1 00050000

Symbol: En_RxTx1
   Definitions
      At line 32 in file Isaac_p5.s
   Uses
      None
Comment: En_RxTx1 unused
IOPIN E0028000

Symbol: IOPIN
   Definitions
      At line 29 in file Isaac_p5.s
   Uses
      None
Comment: IOPIN unused
Off_LCR 0000000C

Symbol: Off_LCR
   Definitions
      At line 35 in file Isaac_p5.s
   Uses
      At line 87 in file Isaac_p5.s
      At line 91 in file Isaac_p5.s

Off_LSR 00000014

Symbol: Off_LSR
   Definitions
      At line 36 in file Isaac_p5.s
   Uses
      At line 101 in file Isaac_p5.s
      At line 116 in file Isaac_p5.s

PINSEL0 E002C000

Symbol: PINSEL0
   Definitions
      At line 28 in file Isaac_p5.s
   Uses
      At line 81 in file Isaac_p5.s
Comment: PINSEL0 used once
S_fmt 00000083

Symbol: S_fmt
   Definitions
      At line 37 in file Isaac_p5.s
   Uses
      At line 86 in file Isaac_p5.s
Comment: S_fmt used once
S_fmt2 00000003



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: S_fmt2
   Definitions
      At line 38 in file Isaac_p5.s
   Uses
      At line 90 in file Isaac_p5.s
Comment: S_fmt2 used once
Speed 00000061

Symbol: Speed
   Definitions
      At line 39 in file Isaac_p5.s
   Uses
      None
Comment: Speed unused
U0_bas E000C000

Symbol: U0_bas
   Definitions
      At line 33 in file Isaac_p5.s
   Uses
      At line 85 in file Isaac_p5.s
      At line 99 in file Isaac_p5.s
      At line 114 in file Isaac_p5.s

U1_bas E0010000

Symbol: U1_bas
   Definitions
      At line 34 in file Isaac_p5.s
   Uses
      None
Comment: U1_bas unused
off_DIR 00000008

Symbol: off_DIR
   Definitions
      At line 30 in file Isaac_p5.s
   Uses
      None
Comment: off_DIR unused
12 symbols
347 symbols in table
